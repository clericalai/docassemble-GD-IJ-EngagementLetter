# See http://docassemble.org/docs/objects.html#tocAnchor-1-30-1
#https://app.gooddocs.io/?i=docassemble.GD-IJ-EngagementLetter%3Adata%2Fquestions%2Fquestions.yml#page1
---
metadata:
  title: Engagement Letter
  short title: Engagement
  description: |
    Law Firm Engagement Letter Contract
  authors:
    - name: Nathan Roach
    - organization: GoodDocs.io
  revision_date: 2017-05-03
  debug: True
---
modules:
  - docassemble.base.util
  - docassemble.base.legal
---
objects:
  - case: Case
  - client: Individual
  - attorney: Individual
  - pleading: LegalFiling
  - court: Court
  - role_change: RoleChangeTracker # important
---
generic object: Individual
question: |
  What is ${ x.object_possessive('name') }?
fields:
  - First Name: x.name.first
    default: ${ x.first_name_hint() }
  - Middle Name: x.name.middle
    required: False
  - Last Name: x.name.last
    default: ${ x.last_name_hint() }
  - Suffix: x.name.suffix
    required: False
code: |
  name_suffix()
---
role: client
question: |
  What is ${ client.object_possessive('address') }?
fields:
  - address: client.address.address
  - unit: client.address.unit
    required: False
  - city: client.address.city
  - state: client.address.state
  - zip: client.address.zip
  - country: client.address.country
    default: 'US'
---
mandatory: true
code: |
  case.court = court
  pleading.case = case
---
code: |
    import time
    EffectiveDate = time.strftime("%m/%d/%Y")
---
role: organizer
default role: organizer
question: Please provide the client's initial email.
subquestion: |
   You may resume [the interview](${ interview_url() }) later.
fields:
  - First Name: client.name.first
    default: ${ client.first_name_hint() }
  - Last Name: client.name.last
    default: ${ client.last_name_hint() }
  - Email Address: client.email
---
role: organizer
question: Please provide the attorney's work email.
subquestion: |
   You may resume [the interview](${ interview_url() }) later.
fields:
  - First Name: attorney.name.first
    default: ${ attorney.first_name_hint() }
  - Last Name: attorney.name.last
    default: ${ attorney.last_name_hint() }
  - Email Address: attorney.email
---
code: |
  multi_user = True
  role = 'organizer'
  if user_logged_in() and \
      attorney.attribute_defined('email') and \
      attorney.email == user_info().email:
    user = attorney
    role = 'attorney'
  else:
    user = client
    role = 'client'
  set_info(user=user, role=role)
---
event: role_event
question: You are done for now.
subquestion: |
  % if 'attorney' in role_needed:
  An attorney needs to review your answers before you can proceed.

  Please remember the following link and come back to it when you
  receive notice to do so:

  [${ interview_url() }](${ interview_url() })
  % else:
  Thanks, the client needs to resume the interview now.
  % endif

  % if role_change.send_email(role_needed, attorney={'to': attorney, 'email': role_event_email_to_attorney}, client={'to': client, 'email': role_event_email_to_client}):
  An e-mail has been sent.
  % endif
decoration: exit
buttons:
  - Exit: leave
---
template: role_event_email_to_attorney
subject: |
  Client interview waiting for your attention: ${ client }
content: |
  A client, ${ client }, has partly finished an interview.

  Please go to [the interview](${ interview_url() }) as soon as
  possible to review the client's answers.
---
template: role_event_email_to_client
subject: |
  Your interview answers have been reviewed
content: |
  An attorney has finished reviewing your answers.

  Please go to [${ interview_url() }](${ interview_url() })
  to resume the interview.
---
mandatory: true
role: attorney
question: Thanks for engaging our firm.  We will be in contact regarding next steps.
attachment:
  - name: ${ client.name } Engagement Letter
    filename: ${ client.name }-Engagement-Letter
    content file: TEMPLATE_Engagement Letter_Individual.md
---
